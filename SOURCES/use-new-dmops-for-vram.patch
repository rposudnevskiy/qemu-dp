xen: Use new dmop calls to set up the VRAM

This allows the VRAM to be set up with a deprivileged QEMU.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>

diff --git a/hw/i386/xen/xen-hvm.c b/hw/i386/xen/xen-hvm.c
index e3dfdf8..56bc993 100644
--- a/hw/i386/xen/xen-hvm.c
+++ b/hw/i386/xen/xen-hvm.c
@@ -348,10 +348,10 @@ static int xen_add_to_physmap(XenIOState *state,
                               MemoryRegion *mr,
                               hwaddr offset_within_region)
 {
-    unsigned long i = 0;
     int rc = 0;
     XenPhysmap *physmap = NULL;
-    hwaddr pfn, start_gpfn;
+    hwaddr start_mfn, start_gpfn;
+    uint16_t num_pfns;
     hwaddr phys_offset = memory_region_get_ram_addr(mr);
     const char *mr_name;
 
@@ -395,22 +395,20 @@ go_physmap:
         return 0;
     }
 
-    pfn = phys_offset >> TARGET_PAGE_BITS;
+    start_mfn = phys_offset >> TARGET_PAGE_BITS;
     start_gpfn = start_addr >> TARGET_PAGE_BITS;
-    for (i = 0; i < size >> TARGET_PAGE_BITS; i++) {
-        unsigned long idx = pfn + i;
-        xen_pfn_t gpfn = start_gpfn + i;
-
-        rc = xen_xc_domain_add_to_physmap(xen_xc, xen_domid, XENMAPSPACE_gmfn, idx, gpfn);
-        if (rc) {
-            DPRINTF("add_to_physmap MFN %"PRI_xen_pfn" to PFN %"
-                    PRI_xen_pfn" failed: %d (errno: %d)\n", idx, gpfn, rc, errno);
-            return -rc;
-        }
-    }
-
-    xc_domain_pin_memory_cacheattr(xen_xc, xen_domid,
-                                   start_addr >> TARGET_PAGE_BITS,
+    num_pfns = size >> TARGET_PAGE_BITS;
+    rc = xendevicemodel_relocate_memory(xen_dmod, xen_domid,
+                                        num_pfns, start_mfn, start_gpfn);
+    if (rc) {
+        DPRINTF("add_to_physmap size %u start_mfn %"PRI_xen_pfn" start_gpfn %"
+                PRI_xen_pfn" failed: %d (errno: %d)\n",
+                num_pfns, start_mfn, start_gpfn, rc, errno);
+        return -rc;
+    }
+
+    xendevicemodel_pin_memory_cacheattr(xen_dmod, xen_domid,
+                                   start_gpfn,
                                    (start_addr + size - 1) >> TARGET_PAGE_BITS,
                                    XEN_DOMCTL_MEM_CACHEATTR_WB);
     return xen_save_physmap(state, physmap);
